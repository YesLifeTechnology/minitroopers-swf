
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  lang: 'lang',
  name: 'name',
  createdAt: 'createdAt',
  lastConnexion: 'lastConnexion',
  admin: 'admin',
  connexionToken: 'connexionToken',
  gold: 'gold',
  power: 'power',
  armyName: 'armyName',
  armyUrl: 'armyUrl',
  prefix: 'prefix',
  color: 'color',
  sponsoredById: 'sponsoredById',
  referralGold: 'referralGold',
  ratsCount: 'ratsCount',
  infiltrationOpponentArmy: 'infiltrationOpponentArmy',
  infiltrationOpponentDate: 'infiltrationOpponentDate',
  infiltrationUnlockAt: 'infiltrationUnlockAt',
  exterminationUnlockAt: 'exterminationUnlockAt',
  epicUnlockAt: 'epicUnlockAt'
};

exports.Prisma.RelationLoadStrategy = {
  query: 'query',
  join: 'join'
};

exports.Prisma.IpAddressUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  ip: 'ip'
};

exports.Prisma.HistoryUserScalarFieldEnum = {
  id: 'id',
  ts: 'ts',
  type: 'type',
  options: 'options',
  userId: 'userId'
};

exports.Prisma.TrooperScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  userId: 'userId',
  name: 'name',
  choices: 'choices',
  group: 'group',
  seed: 'seed',
  targetSystem: 'targetSystem',
  targetType: 'targetType',
  reloadSystem: 'reloadSystem',
  moveSystem: 'moveSystem',
  CBody: 'CBody',
  CWeapon: 'CWeapon',
  selectedItems: 'selectedItems'
};

exports.Prisma.TrooperDayScalarFieldEnum = {
  id: 'id',
  name: 'name',
  seed: 'seed',
  choices: 'choices'
};

exports.Prisma.FightScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  ts: 'ts',
  userName: 'userName',
  userPrefix: 'userPrefix',
  opponentName: 'opponentName',
  opponentPrefix: 'opponentPrefix',
  fightInputSWFData: 'fightInputSWFData',
  result: 'result'
};

exports.Prisma.MissionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  ts: 'ts',
  type: 'type',
  missionInputSWFData: 'missionInputSWFData',
  result: 'result'
};

exports.Prisma.RaidScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  ts: 'ts',
  result: 'result',
  graveyard: 'graveyard'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Lang = exports.$Enums.Lang = {
  en: 'en',
  fr: 'fr',
  de: 'de',
  es: 'es',
  ru: 'ru',
  pt: 'pt'
};

exports.HistoryType = exports.$Enums.HistoryType = {
  creation: 'creation',
  war: 'war',
  trooperAdd: 'trooperAdd',
  trooperUpdate: 'trooperUpdate',
  trooperAvailable: 'trooperAvailable',
  recruit: 'recruit'
};

exports.FightResult = exports.$Enums.FightResult = {
  win: 'win',
  lose: 'lose'
};

exports.MissionType = exports.$Enums.MissionType = {
  exterminate: 'exterminate',
  infiltrate: 'infiltrate',
  epic: 'epic'
};

exports.Prisma.ModelName = {
  User: 'User',
  ipAddressUser: 'ipAddressUser',
  HistoryUser: 'HistoryUser',
  Trooper: 'Trooper',
  TrooperDay: 'TrooperDay',
  Fight: 'Fight',
  Mission: 'Mission',
  Raid: 'Raid'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\fanba\\Documents\\minitroopers-swf\\packages\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "nativeDistinct",
      "relationJoins"
    ],
    "sourceFilePath": "C:\\Users\\fanba\\Documents\\minitroopers-swf\\packages\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"./\"\n  previewFeatures = [\"nativeDistinct\", \"relationJoins\"]\n  binaryTargets   = [\"native\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Lang {\n  en\n  fr\n  de\n  es\n  ru\n  pt\n}\n\nmodel User {\n  id                       String          @id @unique @db.Uuid\n  lang                     Lang            @default(fr)\n  name                     String          @db.VarChar(255)\n  createdAt                DateTime        @default(now()) @db.Timestamptz()\n  lastConnexion            DateTime        @default(now()) @db.Timestamptz()\n  admin                    Boolean         @default(false)\n  connexionToken           String          @db.Uuid\n  gold                     Int             @default(0)\n  power                    Int             @default(0)\n  armyName                 String          @db.VarChar(255)\n  armyUrl                  String          @db.VarChar(255) //to remove ?\n  prefix                   Int             @default(0)\n  color                    Int             @default(0) // 0~5\n  sponsoredBy              User?           @relation(\"UserSponsor\", fields: [sponsoredById], references: [id])\n  sponsoredById            String?         @db.Uuid\n  sponsoredUsers           User[]          @relation(\"UserSponsor\")\n  referralGold             Int             @default(100)\n  ratsCount                Int             @default(0)\n  infiltrationOpponentArmy String?         @db.Uuid\n  infiltrationOpponentDate DateTime?\n  troopers                 Trooper[]\n  history                  HistoryUser[]\n  ipAddressUser            ipAddressUser[]\n  fights                   Fight[]\n  missions                 Mission[]\n  infiltrationUnlockAt     DateTime?       @db.Timestamptz\n  exterminationUnlockAt    DateTime?       @db.Timestamptz\n  epicUnlockAt             DateTime?       @db.Timestamptz\n  raids                    Raid[]\n}\n\nmodel ipAddressUser {\n  id     String @id @unique @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user   User   @relation(fields: [userId], references: [id])\n  userId String @db.Uuid\n  ip     String\n}\n\nenum HistoryType {\n  creation\n  war\n  trooperAdd\n  trooperUpdate\n  trooperAvailable\n  recruit\n}\n\nmodel HistoryUser {\n  id      String      @id @unique @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  ts      DateTime    @default(now()) @db.Timestamptz()\n  type    HistoryType\n  options Json?\n  user    User        @relation(fields: [userId], references: [id])\n  userId  String      @db.Uuid\n}\n\nmodel Trooper {\n  id            String   @id @unique @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  createdAt     DateTime @default(now()) @db.Timestamptz()\n  user          User     @relation(fields: [userId], references: [id])\n  userId        String   @db.Uuid\n  name          String   @db.VarChar(255)\n  choices       Int[]\n  group         Int\n  seed          Int\n  targetSystem  Int      @default(0)\n  targetType    Int      @default(0)\n  reloadSystem  Int      @default(2)\n  moveSystem    Int      @default(1)\n  CBody         Int      @default(0)\n  CWeapon       Int? //null\n  selectedItems Int[]\n}\n\nmodel TrooperDay {\n  id      String @id @unique @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  name    String @db.VarChar(255)\n  seed    Int\n  choices Int[]\n}\n\nenum FightResult {\n  win\n  lose\n}\n\nmodel Fight {\n  id                String      @id @unique @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user              User        @relation(fields: [userId], references: [id])\n  userId            String      @db.Uuid\n  ts                DateTime    @default(now()) @db.Timestamptz()\n  userName          String\n  userPrefix        Int\n  opponentName      String\n  opponentPrefix    Int\n  fightInputSWFData String\n  result            FightResult\n}\n\nenum MissionType {\n  exterminate\n  infiltrate\n  epic\n}\n\nmodel Mission {\n  id                  String      @id @unique @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user                User        @relation(fields: [userId], references: [id])\n  userId              String      @db.Uuid\n  ts                  DateTime    @default(now()) @db.Timestamptz()\n  type                MissionType\n  missionInputSWFData String\n  result              FightResult\n}\n\nmodel Raid {\n  id        String      @id @unique @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  user      User        @relation(fields: [userId], references: [id])\n  userId    String      @db.Uuid\n  ts        DateTime    @default(now()) @db.Timestamptz()\n  result    FightResult\n  graveyard String[]\n}\n",
  "inlineSchemaHash": "bb0416bd4b10458909f2e2f605889a8ff809f3b5e02140224e7237c13aac2fa9",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lang\",\"kind\":\"enum\",\"type\":\"Lang\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastConnexion\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"connexionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gold\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"power\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"armyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"armyUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prefix\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sponsoredBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserSponsor\"},{\"name\":\"sponsoredById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sponsoredUsers\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserSponsor\"},{\"name\":\"referralGold\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ratsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"infiltrationOpponentArmy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"infiltrationOpponentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"troopers\",\"kind\":\"object\",\"type\":\"Trooper\",\"relationName\":\"TrooperToUser\"},{\"name\":\"history\",\"kind\":\"object\",\"type\":\"HistoryUser\",\"relationName\":\"HistoryUserToUser\"},{\"name\":\"ipAddressUser\",\"kind\":\"object\",\"type\":\"ipAddressUser\",\"relationName\":\"UserToipAddressUser\"},{\"name\":\"fights\",\"kind\":\"object\",\"type\":\"Fight\",\"relationName\":\"FightToUser\"},{\"name\":\"missions\",\"kind\":\"object\",\"type\":\"Mission\",\"relationName\":\"MissionToUser\"},{\"name\":\"infiltrationUnlockAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"exterminationUnlockAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"epicUnlockAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"raids\",\"kind\":\"object\",\"type\":\"Raid\",\"relationName\":\"RaidToUser\"}],\"dbName\":null},\"ipAddressUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToipAddressUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ip\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"HistoryUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"HistoryType\"},{\"name\":\"options\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HistoryUserToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Trooper\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TrooperToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"choices\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"group\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"targetSystem\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"targetType\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reloadSystem\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"moveSystem\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"CBody\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"CWeapon\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"selectedItems\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"TrooperDay\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"choices\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Fight\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FightToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userPrefix\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"opponentName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"opponentPrefix\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fightInputSWFData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"result\",\"kind\":\"enum\",\"type\":\"FightResult\"}],\"dbName\":null},\"Mission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MissionToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"MissionType\"},{\"name\":\"missionInputSWFData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"result\",\"kind\":\"enum\",\"type\":\"FightResult\"}],\"dbName\":null},\"Raid\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RaidToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"result\",\"kind\":\"enum\",\"type\":\"FightResult\"},{\"name\":\"graveyard\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

